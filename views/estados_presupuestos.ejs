<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <title><%= reportTitle %> · <%= period %> · FinAi</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <style>
    /* ===== Base (modo claro, A4, tipografía) ===== */
    @page { size: A4; margin: 20mm; }
    :root{
      --bg: #FFFFFF;
      --surface: #F7F8FA;
      --text: #0F172A;
      --muted: #475569;
      --border: #E5E7EB;
      --accent: #007AFF;
      --green: #16A34A;
      --amber: #F59E0B;
      --red: #FF5A5F;
      --shadow-sm: 0 1px 2px rgba(16,24,40,0.06), 0 1px 3px rgba(16,24,40,0.08);
    }
    *{ box-sizing: border-box; -webkit-print-color-adjust: exact; print-color-adjust: exact; }
    html, body{ height: 100%; }
    body{
      margin: 0;
      background: var(--bg);
      color: var(--text);
      font: 400 11pt/1.55 "Inter", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", Helvetica, sans-serif;
      -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale;
    }

    .page{ max-width: 800px; margin: 0 auto; padding: 8px 0 16px; }

    /* ===== Cabecera ===== */
    .header{
      margin-bottom: 14px; padding-bottom: 12px;
      border-bottom: 1px solid var(--border);
      display: flex; align-items: baseline; gap: 12px; justify-content: space-between; flex-wrap: wrap;
    }
    .title{
      margin: 0; font-size: 18pt; font-weight: 800; line-height: 1.2; color: var(--text);
    }
    .period{ margin: 0; font-size: 11pt; color: var(--muted); }

    /* ===== Resumen/estado general ===== */
    .summary{
      margin: 8px 0 12px;
      background: #FFFFFF;
      border: 1px solid var(--border);
      border-radius: 10px;
      padding: 10px 12px;
      color: var(--muted);
      display: flex; gap: 10px; align-items: center;
      box-shadow: var(--shadow-sm);
    }
    .summary-dot{ width: 10px; height: 10px; border-radius: 50%; background: var(--accent); flex: 0 0 auto; }

    /* ===== Leyenda de colores ===== */
    .legend{
      display: inline-flex; gap: 12px; align-items: center; font-size: 10pt; color: var(--muted);
      margin: 2px 0 6px;
    }
    .legend-item{ display: inline-flex; gap: 6px; align-items: center; }
    .legend-swatch{ width: 12px; height: 12px; border-radius: 3px; display: inline-block; }

    /* ===== Lista de presupuestos ===== */
    .list{
      display: grid; gap: 10px;
    }
    .row{
      background: var(--surface);
      border: 1px solid var(--border);
      border-radius: 12px;
      box-shadow: var(--shadow-sm);
      padding: 12px;
      display: grid;
      grid-template-columns: 44px 1fr auto;
      grid-auto-rows: min-content;
      align-items: center;
      gap: 12px;
    }
    .icon{
      width: 44px; height: 44px; border-radius: 10px; background: #FFFFFF;
      border: 1px solid var(--border);
      display: grid; place-items: center;
      color: var(--accent);
      font-weight: 700;
    }
    .meta{
      display: grid; gap: 8px;
    }
    .name{
      margin: 0; font-weight: 700; font-size: 12pt; color: var(--text);
    }
    .bar{
      position: relative;
      width: 100%; height: 12px;
      background: #FFFFFF;
      border: 1px solid var(--border);
      border-radius: 999px;
      overflow: hidden;
    }
    .fill{
      position: absolute; left: 0; top: 0; bottom: 0;
      width: 0%;
      border-radius: inherit;
    }
    .fill.ok{ background: var(--green); }
    .fill.warn{ background: var(--amber); }
    .fill.over{ background: var(--red); }

    .details{
      display: flex; align-items: center; gap: 8px; flex-wrap: wrap;
      font-size: 10.5pt; color: var(--muted);
    }
    .strong{ color: var(--text); font-weight: 700; }
    .badge{
      border: 1px solid var(--border); background: #FFFFFF;
      padding: 3px 8px; border-radius: 999px; font-weight: 600; font-size: 10pt;
    }
    .badge.ok{ color: var(--green); border-color: #BBF7D0; background: #F0FDF4; }
    .badge.warn{ color: #92400E; border-color: #FDE68A; background: #FFFBEB; }
    .badge.over{ color: #9F1239; border-color: #FECACA; background: #FEF2F2; }

    .pct{
      font-size: 11pt; font-weight: 800; color: var(--text);
      min-width: 54px; text-align: right;
    }

    /* Accesibilidad */
    .sr-only{
      position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
    }
  </style>
</head>
<body>
  <div class="page">
    <!-- ===== Cabecera ===== -->
    <header class="header" role="banner">
      <h1 class="title"><%= reportTitle %></h1>
      <p class="period"><%= period %></p>
    </header>

    <!-- ===== Helpers EJS ===== -->
    <%
      const _locale = 'es-ES';
      const _currency = (typeof currency !== 'undefined' && currency) ? currency : 'EUR';
      const money = (n) => {
        try {
          return new Intl.NumberFormat(_locale, { style: 'currency', currency: _currency, minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(n);
        } catch {
          const sign = (n < 0) ? '-' : '';
          const abs = Math.abs(Number(n) || 0).toFixed(2).replace('.', ',');
          return sign + abs + ' ' + _currency;
        }
      };

      // Normaliza presupuestos
      const rows = (Array.isArray(budgets) ? budgets : []).map((b, i) => {
        const allocated = Math.max(0, Number(b?.allocatedAmount) || 0);
        const spent = Math.max(0, Number(b?.spentAmount) || 0);
        const remaining = (b?.remainingAmount != null) ? Number(b.remainingAmount) : (allocated - spent);
        let pct = b?.percentageSpent != null ? Number(b.percentageSpent) : (allocated > 0 ? (spent / allocated) * 100 : 0);
        // saneamos
        pct = isFinite(pct) ? Math.max(0, pct) : 0;
        return {
          idx: i,
          categoryName: String(b?.categoryName || `Presupuesto ${i+1}`),
          icon: String(b?.icon || ''),
          allocated, spent, remaining, pct
        };
      });

      // Color lógico según % gastado
      const band = (pct) => (pct < 70 ? 'ok' : (pct < 90 ? 'warn' : 'over'));
      const clampWidth = (pct) => Math.min(100, Math.max(0, pct));

      // Iconos: map algunos "fas-*" a SVG. Fallback: iniciales.
      function iconSvg(icon, name){
        const color = 'currentColor';
        switch(icon){
          case 'fas-utensils': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M8 2c.55 0 1 .45 1 1v6c0 1.66-1.34 3-3 3v8c0 .55-.45 1-1 1s-1-.45-1-1v-8c-1.66 0-3-1.34-3-3V3c0-.55.45-1 1-1s1 .45 1 1v6c0 .55.45 1 1 1s1-.45 1-1V3c0-.55.45-1 1-1zm9-1c1.1 0 2 .9 2 2v7h-3v11c0 .55-.45 1-1 1s-1-.45-1-1V10h-3V3c0-1.1.9-2 2-2h4z"/></svg>`;
          case 'fas-film': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M4 4h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2zm0 2v2h2V6H4zm0 4v2h2v-2H4zm0 4v2h2v-2H4zm4-8v10h8V6H8zm10 0v2h2V6h-2zm0 4v2h2v-2h-2zm0 4v2h2v-2h-2z"/></svg>`;
          case 'fas-home': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M12 3l10 9h-3v9h-6v-6H11v6H5v-9H2l10-9z"/></svg>`;
          case 'fas-shopping-cart': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM7.2 14h9.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49A1 1 0 0 0 21.1 5H6.21L5.27 3H2v2h2l3.6 7.59-1.35 2.45C5.52 15.37 6.48 17 8 17h12v-2H8l1.2-1z"/></svg>`;
          case 'fas-bus': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M4 16v3a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-1h10v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-3c0-3.87-3.13-7-7-7H11c-3.87 0-7 3.13-7 7zM7 6h10v2H7z"/></svg>`;
          case 'fas-bolt': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M11 21h-1l1-7H7l6-12h1l-1 7h4l-6 12z"/></svg>`;
          case 'fas-heart': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M12 21s-7-4.35-10-8.28C-1 9.06 1.5 5 5.5 5c2 0 3.57 1.02 4.5 2.09C11.93 6.02 13.5 5 15.5 5 19.5 5 22 9.06 22 12.72 19 16.65 12 21 12 21z"/></svg>`;
          case 'fas-car': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M5 16l-1 3v1h2a2 2 0 0 0 2-2h8a2 2 0 0 0 2 2h2v-1l-1-3 1-6-3-5H7L4 10l1 6zm3-9h8l1.5 3H6.5L8 7z"/></svg>`;
          case 'fas-graduation-cap': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M12 3L1 9l11 6 9-4.91V17h2V9L12 3zm-7 8.18V15l7 4 7-4v-3.82L12 14 5 11.18z"/></svg>`;
          case 'fas-dumbbell': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M1 10h4v4H1v-4zm6-3h4v10H7V7zm10 0h4v10h-4V7zm-6 3h4v4h-4v-4z"/></svg>`;
          case 'fas-tshirt': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M16 3l4 3-2 3v12H6V9L4 6l4-3 2 2h4l2-2z"/></svg>`;
          default: {
            const letters = (name || '').trim().split(/\s+/).slice(0,2).map(x=>x[0]||'').join('').toUpperCase() || '?';
            return `<div style="font-weight:800;font-size:11pt;color:#0F172A">${letters}</div>`;
          }
        }
      }
    %>

    <!-- ===== Resumen de estado ===== -->
    <% if (typeof summaryStatus !== 'undefined' && summaryStatus) { %>
      <div class="summary" role="status">
        <span class="summary-dot" aria-hidden="true"></span>
        <span><%= summaryStatus %></span>
      </div>
    <% } %>

    <!-- ===== Leyenda ===== -->
    <div class="legend" aria-label="Leyenda de colores de progreso">
      <span class="legend-item"><span class="legend-swatch" style="background: var(--green)"></span> &lt; 70%</span>
      <span class="legend-item"><span class="legend-swatch" style="background: var(--amber)"></span> 70–89%</span>
      <span class="legend-item"><span class="legend-swatch" style="background: var(--red)"></span> ≥ 90%</span>
    </div>

    <!-- ===== Lista de presupuestos ===== -->
    <main class="list" role="list" aria-label="Estado de presupuestos">
      <% if (!rows.length) { %>
        <div class="row" role="listitem">
          <div class="icon" aria-hidden="true">—</div>
          <div class="meta">
            <p class="name">Sin presupuestos</p>
            <div class="bar"><div class="fill ok" style="width:0%"></div></div>
            <div class="details">No hay presupuestos definidos para este período.</div>
          </div>
          <div class="pct">0%</div>
        </div>
      <% } else { 
           rows.forEach(r => { 
             const bandCls = band(r.pct);
             const width = clampWidth(r.pct).toFixed(1);
             const overAmt = Math.max(0, r.spent - r.allocated);
             const remainingAbs = Math.max(0, r.remaining);
      %>
        <section class="row" role="listitem" aria-labelledby="name-<%= r.idx %>">
          <!-- Icono / iniciales -->
          <div class="icon" aria-hidden="true">
            <%- iconSvg(r.icon, r.categoryName) %>
          </div>

          <!-- Nombre, barra y detalles -->
          <div class="meta">
            <h2 id="name-<%= r.idx %>" class="name"><%= r.categoryName %></h2>

            <!-- Barra de progreso -->
            <div class="bar" aria-label="Progreso de gasto">
              <%= `<div class="fill ${bandCls}" style="width:${width}%"></div>` %>
            </div>

            <!-- Detalles -->
            <div class="details">
              <span>Gastados <span class="strong"><%= money(r.spent) %></span> de <span class="strong"><%= money(r.allocated) %></span></span>
              <% if (overAmt > 0) { %>
                <span class="badge over">Superado en <%= money(overAmt) %></span>
              <% } else { %>
                <span class="badge <%= bandCls %>">Quedan <%= money(remainingAbs) %></span>
              <% } %>
            </div>
          </div>

          <!-- % a la derecha -->
          <div class="pct" aria-label="Porcentaje gastado"><%= (Math.round(r.pct * 10) / 10).toLocaleString('es-ES') %>%</div>
        </section>
      <% }) } %>
    </main>
  </div>
</body>
</html>
