<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <title><%= reportTitle %> · <%= generatedAt %> · FinAi</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <style>
    /* ===== Base (modo claro, A4, tipografía) ===== */
    @page { size: A4; margin: 20mm; }
    :root{
      --bg: #FFFFFF;
      --surface: #F7F8FA;
      --text: #0F172A;
      --muted: #475569;
      --border: #E5E7EB;
      --grid: #EEF1F4;
      --accent: #007AFF;
      --shadow-sm: 0 1px 2px rgba(16,24,40,0.06), 0 1px 3px rgba(16,24,40,0.08);
    }
    *{ box-sizing: border-box; -webkit-print-color-adjust: exact; print-color-adjust: exact; }
    html, body{ height: 100%; }
    body{
      margin: 0;
      background: var(--bg);
      color: var(--text);
      font: 400 11pt/1.55 "Inter", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", Helvetica, sans-serif;
      -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale;
    }

    .page{ max-width: 800px; margin: 0 auto; padding: 8px 0 16px; }

    /* ===== Cabecera ===== */
    .header{
      margin-bottom: 14px; padding-bottom: 12px;
      border-bottom: 1px solid var(--border);
      display: flex; align-items: baseline; gap: 12px; justify-content: space-between; flex-wrap: wrap;
    }
    .title{
      margin: 0; font-size: 18pt; font-weight: 800; line-height: 1.2;
    }
    .meta{
      display: inline-flex; gap: 8px; align-items: center; flex-wrap: wrap;
      color: var(--muted);
    }
    .badge{
      border: 1px solid var(--border);
      background: #FFFFFF;
      border-radius: 999px;
      padding: 4px 10px;
      font-size: 10.5pt;
      box-shadow: var(--shadow-sm);
      color: var(--muted);
    }
    .badge.date{ color: var(--accent); font-weight: 700; }

    /* ===== Tabla ===== */
    .table-card{
      background: #FFFFFF;
      border: 1px solid var(--border);
      border-radius: 12px; box-shadow: var(--shadow-sm);
      padding: 12px;
    }
    table{ width: 100%; border-collapse: collapse; font-size: 10.5pt; }
    thead th{
      text-align: left; font-weight: 700; color: var(--muted);
      border-bottom: 1px solid var(--border); padding: 10px 8px;
      background: #FFFFFF;
    }
    tbody td{
      padding: 10px 8px; border-bottom: 1px solid var(--border);
      vertical-align: top;
    }
    tbody tr:nth-child(even){ background: #FAFAFB; }

    .col-desc{ width: 38%; }
    .col-cat { width: 18%; }
    .col-amt { width: 16%; text-align: right; font-variant-numeric: tabular-nums; white-space: nowrap; }
    .col-freq{ width: 14%; }
    .col-due { width: 14%; white-space: nowrap; }

    .cat-pill{
      display: inline-flex; align-items: center; gap: 6px;
      border: 1px solid var(--border); background: #FFFFFF;
      padding: 3px 8px; border-radius: 999px; font-weight: 600; color: var(--muted);
      white-space: nowrap;
    }
    .dot{ width: 8px; height: 8px; border-radius: 50%; background: var(--accent); }

    caption{ caption-side: bottom; text-align: left; color: var(--muted); font-size: 10pt; margin-top: 8px; }

    /* ===== Reglas de impresión multi-página ===== */
    @media print{
      thead { display: table-header-group; }
      tfoot { display: table-footer-group; }
      tr, img { page-break-inside: avoid; break-inside: avoid; }
    }

    /* Accesibilidad */
    .sr-only{
      position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
    }
  </style>
</head>
<body>
  <div class="page">
    <!-- ===== Cabecera ===== -->
    <header class="header" role="banner">
      <h1 class="title"><%= reportTitle %></h1>
      <div class="meta">
        <span class="badge date" aria-label="Fecha de generación"><%= generatedAt %></span>
      </div>
    </header>

    <!-- ===== Helpers EJS ===== -->
    <%
      const _locale = 'es-ES';
      const _currency = (typeof currency !== 'undefined' && currency) ? currency : 'EUR';
      const money = (n, frac=2) => {
        try {
          return new Intl.NumberFormat(_locale, { style: 'currency', currency: _currency, minimumFractionDigits: frac, maximumFractionDigits: frac }).format(Number(n)||0);
        } catch {
          const num = Number(n)||0;
          const sign = (num < 0) ? '-' : '';
          const abs = Math.abs(num).toFixed(frac).replace('.', ',');
          return sign + abs + ' ' + _currency;
        }
      };

      // Parse DD/MM/YYYY -> Date seguro
      function parseDateDDMMYYYY(s){
        try{
          const [d,m,y] = String(s||'').trim().split(/[\/\-\.]/).map(Number);
          if (!d || !m || !y) return new Date('2100-01-01'); // empuja inválidas al final
          return new Date(y, m-1, d);
        } catch{ return new Date('2100-01-01'); }
      }

      // Normaliza filas y ordena por próximo vencimiento ascendente
      const rows = (Array.isArray(fixedExpenses) ? fixedExpenses : []).map((r, i) => ({
        idx: i,
        description: String(r?.description || '—'),
        categoryName: String(r?.categoryName || '—'),
        amount: Number(r?.amount) || 0,
        frequency: String(r?.frequency || '—'),
        nextDueDate: String(r?.nextDueDate || ''),
        dt: parseDateDDMMYYYY(r?.nextDueDate)
      })).sort((a,b) => a.dt - b.dt);

      // Colores de categoría (hash estable a paleta)
      const palette = ['#007AFF','#5856D6','#FF9500','#34C759','#AF52DE','#FF2D55','#5AC8FA','#FFCC00','#30B0C7','#7D7AFF'];
      function dotColor(name){
        const s = String(name||'cat'); let h=0;
        for (let i=0;i<s.length;i++){ h = (h*31 + s.charCodeAt(i))>>>0; }
        return palette[h % palette.length];
      }
    %>

    <!-- ===== Tabla principal ===== -->
    <section class="table-card" aria-labelledby="fxTitle">
      <h2 id="fxTitle" class="sr-only">Gastos fijos programados</h2>
      <table role="table" aria-describedby="fxCaption">
        <thead>
          <tr>
            <th scope="col" class="col-desc">Descripción</th>
            <th scope="col" class="col-cat">Categoría</th>
            <th scope="col" class="col-amt">Importe</th>
            <th scope="col" class="col-freq">Frecuencia</th>
            <th scope="col" class="col-due">Próximo Vencimiento</th>
          </tr>
        </thead>
        <tbody>
          <% if (!rows.length) { %>
            <tr>
              <td colspan="5" style="text-align:center; color: var(--muted); padding: 24px;">
                No hay gastos fijos programados.
              </td>
            </tr>
          <% } else { rows.forEach(r => { %>
            <tr>
              <td class="col-desc"><%= r.description %></td>
              <td class="col-cat">
                <span class="cat-pill">
                  <%= `<span class="dot" style="background:${dotColor(r.categoryName)}"></span>` %>
                  <%= r.categoryName %>
                </span>
              </td>
              <td class="col-amt"><%= money(r.amount) %></td>
              <td class="col-freq"><%= r.frequency %></td>
              <td class="col-due"><%= r.nextDueDate %></td>
            </tr>
          <% }) } %>
        </tbody>
        <caption id="fxCaption">Listado de pagos recurrentes. El <strong>Importe</strong> corresponde al valor por ciclo de <strong>Frecuencia</strong>. Moneda: <%= _currency %>.</caption>
      </table>
    </section>
  </div>
</body>
</html>
