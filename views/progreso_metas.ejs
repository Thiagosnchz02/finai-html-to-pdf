<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <title><%= reportTitle %> · <%= period %> · FinAi</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <style>
    /* ===== Base (modo claro, A4, tipografía) ===== */
    @page { size: A4; margin: 20mm; }
    :root{
      --bg: #FFFFFF;
      --surface: #F7F8FA;
      --text: #0F172A;
      --muted: #475569;
      --border: #E5E7EB;
      --accent: #007AFF;
      --green: #16A34A;
      --amber: #F59E0B;
      --red: #FF5A5F;
      --shadow-sm: 0 1px 2px rgba(16,24,40,0.06), 0 1px 3px rgba(16,24,40,0.08);
    }
    *{ box-sizing: border-box; -webkit-print-color-adjust: exact; print-color-adjust: exact; }
    html, body{ height: 100%; }
    body{
      margin: 0;
      background: var(--bg);
      color: var(--text);
      font: 400 11pt/1.55 "Inter", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", Helvetica, sans-serif;
      -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale;
    }

    .page{ max-width: 800px; margin: 0 auto; padding: 8px 0 16px; }

    /* ===== Cabecera ===== */
    .header{
      margin-bottom: 14px; padding-bottom: 12px;
      border-bottom: 1px solid var(--border);
      display: flex; align-items: baseline; gap: 12px; justify-content: space-between; flex-wrap: wrap;
    }
    .title{
      margin: 0; font-size: 18pt; font-weight: 800; line-height: 1.2; color: var(--text);
    }
    .period{ margin: 0; font-size: 11pt; color: var(--muted); }

    /* ===== Resumen del período ===== */
    .summary{
      margin: 8px 0 12px;
      background: #FFFFFF;
      border: 1px solid var(--border);
      border-radius: 12px;
      padding: 12px 14px;
      box-shadow: var(--shadow-sm);
      display: flex; align-items: center; gap: 10px; flex-wrap: wrap;
      color: var(--muted);
    }
    .summary strong{ color: var(--text); }

    /* ===== Grid de metas ===== */
    .grid{
      display: grid; gap: 12px;
      grid-template-columns: 1fr;
    }
    @media (min-width: 720px){
      .grid{ grid-template-columns: 1fr 1fr; }
    }

    /* ===== Tarjeta de meta ===== */
    .card{
      background: var(--surface);
      border: 1px solid var(--border);
      border-radius: 12px;
      box-shadow: var(--shadow-sm);
      padding: 14px;
      display: grid;
      grid-template-columns: 52px 1fr;
      grid-auto-rows: min-content;
      gap: 12px;
      align-items: start;
    }
    .icon{
      width: 52px; height: 52px; border-radius: 12px;
      background: #FFFFFF; border: 1px solid var(--border);
      display: grid; place-items: center; color: var(--accent); font-weight: 800;
    }
    .name{
      margin: 0; font-size: 13pt; font-weight: 800; color: var(--text);
      display: flex; align-items: center; gap: 8px;
    }
    .badge{
      border: 1px solid var(--border); background: #FFFFFF;
      padding: 3px 8px; border-radius: 999px; font-weight: 600; font-size: 10pt; color: var(--muted);
    }
    .badge.done{ color: var(--green); border-color: #BBF7D0; background: #F0FDF4; }
    .badge.risk{ color: #92400E; border-color: #FDE68A; background: #FFFBEB; }
    .badge.slow{ color: var(--muted); }

    .meta{
      grid-column: 1 / -1;
      margin-top: -4px;
      color: var(--muted); font-size: 10.5pt;
      display: flex; gap: 12px; flex-wrap: wrap;
    }
    .meta strong{ color: var(--text); }

    /* ===== Barra de progreso ===== */
    .bar{
      grid-column: 1 / -1;
      position: relative;
      width: 100%; height: 16px;
      background: #FFFFFF;
      border: 1px solid var(--border);
      border-radius: 999px;
      overflow: hidden;
      margin-top: 6px;
    }
    .fill{
      position: absolute; left: 0; top: 0; bottom: 0;
      width: 0%;
      background: linear-gradient(90deg, var(--accent), #4CA9FF);
      border-right: 1px solid rgba(0,0,0,0.05);
    }
    .fill.done{ background: linear-gradient(90deg, var(--green), #34D399); }

    .pct{
      grid-column: 1 / -1;
      display: flex; justify-content: space-between; align-items: center;
      margin-top: 6px; font-size: 10.5pt; color: var(--muted);
    }
    .pct strong{ color: var(--text); }

    /* Accesibilidad */
    .sr-only{
      position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
    }
  </style>
</head>
<body>
  <div class="page">
    <!-- ===== Cabecera ===== -->
    <header class="header" role="banner">
      <h1 class="title"><%= reportTitle %></h1>
      <p class="period"><%= period %></p>
    </header>

    <!-- ===== Helpers EJS ===== -->
    <%
      const _locale = 'es-ES';
      const _currency = (typeof currency !== 'undefined' && currency) ? currency : 'EUR';
      const money = (n) => {
        try {
          return new Intl.NumberFormat(_locale, { style: 'currency', currency: _currency, minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(n);
        } catch {
          const sign = (n < 0) ? '-' : '';
          const abs = Math.abs(Number(n) || 0).toFixed(2).replace('.', ',');
          return sign + abs + ' ' + _currency;
        }
      };

      // Normaliza metas
      const goalsArr = (Array.isArray(goals) ? goals : []).map((g, i) => {
        const target = Math.max(0, Number(g?.targetAmount) || 0);
        const current = Math.max(0, Number(g?.currentAmount) || 0);
        const savedPeriod = Math.max(0, Number(g?.savedInPeriod) || 0);
        let pct = g?.percentageCompleted != null ? Number(g.percentageCompleted) : (target > 0 ? (current / target) * 100 : 0);
        pct = isFinite(pct) ? Math.max(0, pct) : 0; // sanea
        return {
          idx: i,
          name: String(g?.name || `Meta ${i+1}`),
          icon: String(g?.icon || ''),
          target, current, savedPeriod, pct,
          remaining: Math.max(0, target - current)
        };
      });

      // Orden opcional: metas con mayor % primero
      const goalsSorted = goalsArr.slice().sort((a,b) => b.pct - a.pct);

      // Clases de estado
      const statusBadge = (pct) => {
        if (pct >= 100) return { cls: 'done', label: 'Completada' };
        if (pct >= 70)  return { cls: 'risk', label: 'En buen camino' };
        return { cls: 'slow', label: 'En progreso' };
      };
      const clampWidth = (pct) => Math.min(100, Math.max(0, pct));

      // Iconos SVG embebidos
      function iconSvg(icon, name){
        const color = 'currentColor';
        switch(icon){
          case 'fas-plane': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M10.18 9"/></svg>
          <svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M21 16l-8-5 8-5v3l-5 2 5 2v3zm-9.5 1.5l-2.5 2.5v-3l-6-4v-2l6-4v-3l2.5 2.5L14 8l-4 4 4 4-2.5 1.5z"/></svg>`;
          case 'fas-laptop': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M4 6h16a2 2 0 0 1 2 2v8h-2V8H4v8H2V8a2 2 0 0 1 2-2zm-2 12h20v2H2z"/></svg>`;
          case 'fas-piggy-bank': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M20 8h-1.81A8 8 0 0 0 5 9.09V9H4a2 2 0 0 0-2 2v2h2v3a3 3 0 0 0 3 3h8a5 5 0 0 0 5-5v-1h2V8h-2zm-4 2a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"/></svg>`;
          case 'fas-car': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M5 16l-1 3v1h2a2 2 0 0 0 2-2h8a2 2 0 0 0 2 2h2v-1l-1-3 1-6-3-5H7L4 10l1 6zm3-9h8l1.5 3H6.5L8 7z"/></svg>`;
          case 'fas-home': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M12 3l10 9h-3v9h-6v-6H11v6H5v-9H2l10-9z"/></svg>`;
          case 'fas-graduation-cap': return `<svg width="22" height="22" viewBox="0 0 24 24" fill="${color}" aria-hidden="true"><path d="M12 3L1 9l11 6 9-4.91V17h2V9L12 3zm-7 8.18V15l7 4 7-4v-3.82L12 14 5 11.18z"/></svg>`;
          default: {
            const letters = (name || '').trim().split(/\s+/).slice(0,2).map(x=>x[0]||'').join('').toUpperCase() || '?';
            return `<div style="font-weight:800;font-size:12pt;color:#0F172A">${letters}</div>`;
          }
        }
      }
    %>

    <!-- ===== Resumen del período ===== -->
    <div class="summary" role="status">
      <span>Aportado en el período:</span>
      <strong><%= (typeof totalSavedInPeriod !== 'undefined') ? money(totalSavedInPeriod) : (goalsSorted.reduce((a,g)=>a+g.savedPeriod,0) ? money(goalsSorted.reduce((a,g)=>a+g.savedPeriod,0)) : money(0)) %></strong>
    </div>

    <!-- ===== Grid de metas ===== -->
    <main class="grid" role="list" aria-label="Metas de ahorro">
      <% if (!goalsSorted.length) { %>
        <section class="card" role="listitem">
          <div class="icon" aria-hidden="true">—</div>
          <h2 class="name">Sin metas definidas</h2>
          <div class="meta">Añade tus metas de ahorro para hacer seguimiento del progreso.</div>
          <div class="bar" aria-hidden="true"><div class="fill" style="width:0%"></div></div>
          <div class="pct"><span>0 de 0</span><strong>0%</strong></div>
        </section>
      <% } else { 
           goalsSorted.forEach(g => { 
             const badge = statusBadge(g.pct);
             const width = clampWidth(g.pct).toFixed(1);
      %>
        <section class="card" role="listitem" aria-labelledby="goal-<%= g.idx %>">
          <!-- Icono -->
          <div class="icon" aria-hidden="true">
            <%- iconSvg(g.icon, g.name) %>
          </div>

          <!-- Título + estado -->
          <h2 id="goal-<%= g.idx %>" class="name">
            <%= g.name %>
            <span class="badge <%= badge.cls %>"><%= badge.label %></span>
          </h2>

          <!-- Línea de meta -->
          <div class="meta">
            <span>Objetivo: <strong><%= money(g.target) %></strong></span>
            <span>Ahorrado: <strong><%= money(g.current) %></strong></span>
            <% if (g.remaining > 0) { %>
              <span>Faltan: <strong><%= money(g.remaining) %></strong></span>
            <% } else { %>
              <span>Exceso: <strong><%= money(Math.max(0, g.current - g.target)) %></strong></span>
            <% } %>
            <span>Este período: <strong><%= money(g.savedPeriod) %></strong></span>
          </div>

          <!-- Barra de progreso -->
          <div class="bar" aria-label="Progreso hacia la meta">
            <%= `<div class="fill ${(g.pct>=100)?'done':''}" style="width:${width}%"></div>` %>
          </div>

          <!-- Porcentaje -->
          <div class="pct">
            <span>Ahorrados <strong><%= money(g.current) %></strong> de <strong><%= money(g.target) %></strong></span>
            <strong><%= (Math.round(g.pct * 10) / 10).toLocaleString('es-ES') %>%</strong>
          </div>
        </section>
      <% }) } %>
    </main>
  </div>
</body>
</html>
